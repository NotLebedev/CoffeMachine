5 31 !
70 32 !
79 33 !
82 34 !
84 35 !
72 36 !
0 37 !
-1 38 !
-1 39 !

1 40 !
58 41 !
1 42 !
31 43 !
18 44 !
0 45 !
1 46 !
0 47 !
2 48 !
10 49 !
-1 50 !

1 51 !
59 52 !
1 53 !
40 54 !
0 55 !
-1 56 !
0 57 !
3 58 !
9 59 !
10 60 !
0 61 !
3 62 !
9 63 !
0 64 !
1 65 !
4 66 !
0 67 !
3 68 !
10 69 !
0 70 !
0 71 !
0 72 !
2 73 !
10 74 !
-1 75 !

76 3 !
51 0 !

: CONTEXT 0 ;
: BASE 1 ;
: STATE 2 ;
: HERE 3 @ ;

: DUP 0 PICK ;
: DROP -1 ! ;
: OVER 1 PICK ;
: ROT 2 ROLL ;
: SWAP 1 ROLL ;

: NEGATE -1 XOR 1 + ;
: - NEGATE + ;
: MOD OVER OVER 3 ROLL 3 ROLL / * - ;

: OR OVER OVER XOR ROT ROT AND XOR ;
: NOT -1 XOR ;
: 0< 31 RSHIFT ;
: 0> DUP 0< SWAP 0= OR NOT ;
: 0<> 0= NOT ;
: = - 0= ;
: <> - 0<> ;
: < - 0< ;
: > - 0> ;

: ABS DUP 31 RSHIFT DUP ROT ROT XOR SWAP - ;

: 0! 0 SWAP ! ;

: IMMIDIATE CONTEXT @ DUP @ 1 + + 1 SWAP ! ;
: [ STATE 0! ; IMMIDIATE
: ] 2 STATE ! ;

: BINARY 2 BASE ! ;
: DECIMAL 10 BASE ! ;
: HEX 16 BASE ! ;

: ALLOT HERE + 3 ! ;

: , HERE 1 ALLOT ! ;

: >MARK HERE 1 ALLOT ;
: >RESOLVE HERE SWAP ! ;

: <MARK HERE ;
: <RESOLVE , ;

: IF COMPILE ?BRANCH >MARK ; IMMIDIATE
: THEN >RESOLVE ; IMMIDIATE
: ELSE COMPILE BRANCH >MARK SWAP >RESOLVE ; IMMIDIATE

: BEGIN <MARK ; IMMIDIATE
: UNTIL COMPILE ?BRANCH <RESOLVE ; IMMIDIATE

: LITERAL STATE @ IF COMPILE LIT , THEN ; IMMIDIATE

: CONSTANT CREATE COMPILE LIT , -1 , ;
: VARIABLE HERE 1 ALLOT CREATE COMPILE LIT , -1 , ;

: FOR <MARK ; IMMIDIATE
: DO COMPILE ?BRANCH >MARK ; IMMIDIATE
: LOOP COMPILE BRANCH SWAP <RESOLVE >RESOLVE ; IMMIDIATE

: CR 10 ;
: WORD HERE 1 ALLOT SWAP BEGIN KEY DUP 2 PICK <> IF , 0 ELSE DROP 1 THEN UNTIL DROP DUP DUP HERE 1 - SWAP - SWAP ! ;

: ( 41 WORD DROP ; ( THIS IS A COMMENT AS YOU CAN SEE )
